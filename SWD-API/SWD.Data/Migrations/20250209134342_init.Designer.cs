// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWD.Data;

#nullable disable

namespace SWD.Data.Migrations
{
    [DbContext(typeof(StockMarketDbContext))]
    [Migration("20250209134342_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SWD.Data.Entities.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<string>("CEO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SWD.Data.Entities.Market", b =>
                {
                    b.Property<int>("MarketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarketID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarketName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarketID");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("SWD.Data.Entities.Session", b =>
                {
                    b.Property<int>("SessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionID"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessionID");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("SWD.Data.Entities.Stock", b =>
                {
                    b.Property<int>("StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ListedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarketID")
                        .HasColumnType("int");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StockID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("MarketID");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("SWD.Data.Entities.StockHistory", b =>
                {
                    b.Property<int>("StockHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockHistoryID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LSReasonchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ListedShares")
                        .HasColumnType("bigint");

                    b.Property<string>("OSReasonchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OutstandingShares")
                        .HasColumnType("bigint");

                    b.Property<string>("RCReasonchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RegisteredCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StockHistoryID");

                    b.ToTable("StockHistories");
                });

            modelBuilder.Entity("SWD.Data.Entities.StockInSession", b =>
                {
                    b.Property<int>("StockInSessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockInSessionID"));

                    b.Property<decimal>("ClosePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HighPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpenPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SessionID")
                        .HasColumnType("int");

                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.HasKey("StockInSessionID");

                    b.HasIndex("SessionID");

                    b.HasIndex("StockID");

                    b.ToTable("StockInSessions");
                });

            modelBuilder.Entity("SWD.Data.Entities.StockWatchList", b =>
                {
                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.Property<int>("WatchListID")
                        .HasColumnType("int");

                    b.HasKey("StockID", "WatchListID");

                    b.HasIndex("WatchListID");

                    b.ToTable("StockWatchLists");
                });

            modelBuilder.Entity("SWD.Data.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("LastEdited")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubscriptionStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SWD.Data.Entities.WatchList", b =>
                {
                    b.Property<int>("WatchListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WatchListID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEdited")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("WatchListID");

                    b.HasIndex("UserID");

                    b.ToTable("WatchLists");
                });

            modelBuilder.Entity("SWD.Data.Entities.Stock", b =>
                {
                    b.HasOne("SWD.Data.Entities.Company", "Company")
                        .WithMany("Stocks")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWD.Data.Entities.Market", "Market")
                        .WithMany("Stocks")
                        .HasForeignKey("MarketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Market");
                });

            modelBuilder.Entity("SWD.Data.Entities.StockInSession", b =>
                {
                    b.HasOne("SWD.Data.Entities.Session", "Session")
                        .WithMany("StockInSessions")
                        .HasForeignKey("SessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWD.Data.Entities.Stock", "Stock")
                        .WithMany("StockInSessions")
                        .HasForeignKey("StockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("SWD.Data.Entities.StockWatchList", b =>
                {
                    b.HasOne("SWD.Data.Entities.Stock", "Stock")
                        .WithMany("StockWatchLists")
                        .HasForeignKey("StockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SWD.Data.Entities.WatchList", "WatchList")
                        .WithMany("StockWatchLists")
                        .HasForeignKey("WatchListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("WatchList");
                });

            modelBuilder.Entity("SWD.Data.Entities.WatchList", b =>
                {
                    b.HasOne("SWD.Data.Entities.User", "User")
                        .WithMany("WatchLists")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SWD.Data.Entities.Company", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("SWD.Data.Entities.Market", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("SWD.Data.Entities.Session", b =>
                {
                    b.Navigation("StockInSessions");
                });

            modelBuilder.Entity("SWD.Data.Entities.Stock", b =>
                {
                    b.Navigation("StockInSessions");

                    b.Navigation("StockWatchLists");
                });

            modelBuilder.Entity("SWD.Data.Entities.User", b =>
                {
                    b.Navigation("WatchLists");
                });

            modelBuilder.Entity("SWD.Data.Entities.WatchList", b =>
                {
                    b.Navigation("StockWatchLists");
                });
#pragma warning restore 612, 618
        }
    }
}
